"""
u(k) = (900 - 3k)r^(k-1)
s(n) = sum_{k=1}^n u(k)
s(5000) = -600,000,000,000
r = ?

s(n) = sum_{k=1}^n 900*r^(k-1) - sum_{k=1}^n 3*k*r^(k-1)
s(n) = 900*sum_{k=1}^n r^(k-1) - 3*d_r sum_{k=1}^n r^k
s(n) = 900*(r^n - 1)/(r-1) - 3*d_r(r^(n+1) - r)/(r-1)
s(n) = 900*(r^n - 1)/(r-1) - 3*(((n+1)r^n - 1)*(r-1) - r^(n+1) + r)/(r-1)^2
s(n) = 900*(r^n - 1)/(r-1) - 3*(1 - (n+1)r^n)/(r-1)^2

(r-1)^2*s(n) = 900*(r^n - 1)*(r-1) - 3 + 3*(n+1)*r^n
s*r^2 - 2*s*r + s = 900*r^(n+1) - 900*r^n - 900*r + 900 - 3 + 3*(n+1)*r^n
s*r^2 - 2*s*r + s = 900*r^(n+1) - 900*r^n - 900*r + 897 + 3*(n+1)*r^n
0 = 900*r^(n+1) + 3*(n-299)*r^n - s*r^2 + 2*(s - 450)*r + 897 - s
0 = 900*r^5001 + 3*(5000-299)*r^5000 + 600000000000*r^2 + 2*(-600000000000 - 450)*r + 897 + 600000000000
0 = 900*r^5001 + 12903*r^5000 + 600000000000*r^2 - 1200000000900*r + 600000000897

Descartes rule of signs tells us there are at most two positive roots.
"""
from sympy import symbols, diff, Sum, intervals, refine_root
import sympy.polys.polytools as poly
r, k, n = symbols("r k n")

n = 5000
#u = (900 - 3*k)*r**(k-1)
#s = Sum(u, (k, 1, n)).doit()
s = -600000000000

#s = 900*(1 - r**n)/(1 - r) - 3*(n*r**(n+1) - (n+1)*r**n + 1)/(1 - r)**2
#s*(1 - r)**2 = 900*(1 - r**n)*(1 - r) - 3*(n*r**(n+1) - (n+1)*r**n + 1)
#s*(1 - r)**2 = 900*(1 - r**n)*(1 - r) - 3*(n*r**(n+1) - (n+1)*r**n + 1)
f = refine_root(900*(1 - r**n)*(1 - r) - 3*(n*r**(n+1) - (n+1)*r**n + 1) - s*(1 - r)**2, 1, 2, eps=1e-13)

#(3268833/3261260, 5116697/5104843)
#(1.002322108632(8598), 1.002322108632(9197))

print(f)

